name: Build
on:
  release:
    types: [published]
  workflow_dispatch:
jobs:
  build-windows:
    runs-on: windows-latest
    env:
      CRATE_NAME: clue
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Cache build
        uses: Swatinem/rust-cache@v2
      - name: Build x86_64-pc-windows-msvc
        run: |
          cargo build  --target=x86_64-pc-windows-msvc --release -vv
          cd target\x86_64-pc-windows-msvc\release && tar -cavf "$env:CRATE_NAME-x86_64-pc-windows-msvc.zip" "$env:CRATE_NAME.exe"  && cd ../../..
      - name: Upload clue-x86_64-pc-windows-msvc
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CRATE_NAME }}-x86_64-pc-windows-msvc.zip
          path: target\x86_64-pc-windows-msvc\release\${{ env.CRATE_NAME }}-x86_64-pc-windows-msvc.zip

      - name: Publish in release
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag'
        with:
          files: |
            target\x86_64-pc-windows-msvc\release\${{ env.CRATE_NAME }}-x86_64-pc-windows-msvc.zip
          token: ${{ secrets.GITHUB_TOKEN }}
  build-macos:
    runs-on: macos-latest
    env:
      CRATE_NAME: "clue"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Cache build
        uses: Swatinem/rust-cache@v2
      - name: Setup targets
        run: |
          rustup target add aarch64-apple-darwin
      - name: Build x86_64-apple-darwin
        run: |
          cargo build --release --target=x86_64-apple-darwin -vv
          cd target/x86_64-apple-darwin/release/ && tar -cvf "$CRATE_NAME-x86_64-apple-darwin.tar.gz" "$CRATE_NAME"  && cd ../../..
      - name: Build aarch64-apple-darwin
        env:
          TARGET_LDFLAGS: "--target=aarch64-apple-darwin"
          TARGET_CFLAGS: "--target=aarch64-apple-darwin"
        run: |
          cargo build --release --target=aarch64-apple-darwin -vv
          cd target/aarch64-apple-darwin/release/ && tar -cvf "$CRATE_NAME-aarch64-apple-darwin.tar.gz" "$CRATE_NAME" && cd ../../..
      - name: Upload clue-x86_64-apple-darwin.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CRATE_NAME }}-x86_64-apple-darwin.tar.gz
          path: target/x86_64-apple-darwin/release/${{ env.CRATE_NAME }}-x86_64-apple-darwin.tar.gz
      - name: Upload aarch64-apple-darwin.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CRATE_NAME }}-aarch64-apple-darwin.tar.gz
          path: target/aarch64-apple-darwin/release/${{ env.CRATE_NAME }}-aarch64-apple-darwin.tar.gz

      - name: Publish in release
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag'
        with:
          files: |
            target/x86_64-apple-darwin/release/${{ env.CRATE_NAME }}-x86_64-apple-darwin.tar.gz
            target/aarch64-apple-darwin/release/${{ env.CRATE_NAME }}-aarch64-apple-darwin.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
  build-gnu-linux:
    runs-on: ubuntu-latest
    env:
      CRATE_NAME: "clue"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Cache build
        uses: Swatinem/rust-cache@v2
      - name: Setup targets
        run: |
          rustup target add i686-unknown-linux-gnu
          rustup target add aarch64-unknown-linux-gnu
          rustup target add armv7-unknown-linux-gnueabi
          rustup target add armv7-unknown-linux-gnueabihf
          sudo apt update && sudo apt install -y -qq gcc-i686-linux-gnu gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf
          mkdir -p .cargo
          echo '[target.i686-unknown-linux-gnu]'>>.cargo/config
          echo 'linker = "i686-linux-gnu-gcc"'>>.cargo/config
          echo '[target.aarch64-unknown-linux-gnu]'>>.cargo/config
          echo 'linker = "aarch64-linux-gnu-gcc"'>>.cargo/config
          echo '[target.armv7-unknown-linux-gnueabi]' >>.cargo/config
          echo 'linker = "arm-linux-gnueabi-gcc"' >>.cargo/config
          echo '[target.armv7-unknown-linux-gnueabihf]' >>.cargo/config
          echo 'linker = "arm-linux-gnueabihf-gcc"' >>.cargo/config
      - name: Build x86_64-unknown-linux-gnu
        env:
          TARGET_CC: gcc
          CC: gcc
        run: |
          cargo build  --target=x86_64-unknown-linux-gnu --release -vv
          cd target/x86_64-unknown-linux-gnu/release/ && tar -cvf "$CRATE_NAME-x86_64-unknown-linux-gnu.tar.gz" "$CRATE_NAME" && cd ../../..
      - name: Build aarch64-unknown-linux-gnu
        env:
          TARGET_CC: aarch64-linux-gnu-gcc
          CC: gcc
        run: |
          cargo build  --target=aarch64-unknown-linux-gnu --release -vv
          cd target/aarch64-unknown-linux-gnu/release/ && tar -cvf "$CRATE_NAME-aarch64-unknown-linux-gnu.tar.gz" "$CRATE_NAME" && cd ../../..
      - name: Build armv7-unknown-linux-gnueabi
        env:
          TARGET_CC: arm-linux-gnueabi-gcc
          HOST_CC: i686-linux-gnu-gcc
        run: |
          cargo build --target=armv7-unknown-linux-gnueabi --release -vv
          cd target/armv7-unknown-linux-gnueabi/release/ && tar -cvf "$CRATE_NAME-armv7-unknown-linux-gnueabi.tar.gz" "$CRATE_NAME" && cd ../../..
      - name: Build armv7-unknown-linux-gnueabihf
        env:
          TARGET_CC: arm-linux-gnueabihf-gcc
          HOST_CC: i686-linux-gnu-gcc
        run: |
          cargo build --target=armv7-unknown-linux-gnueabihf --release -vv
          cd target/armv7-unknown-linux-gnueabihf/release/ && tar -cvf "$CRATE_NAME-armv7-unknown-linux-gnueabihf.tar.gz" "$CRATE_NAME" && cd ../../..
      - name: Upload clue-x86_64-unknown-linux-gnu.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CRATE_NAME }}-x86_64-unknown-linux-gnu.tar.gz
          path: target/x86_64-unknown-linux-gnu/release/${{ env.CRATE_NAME }}-x86_64-unknown-linux-gnu.tar.gz
      - name: Upload aarch64-unknown-linux-gnu.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CRATE_NAME }}-aarch64-unknown-linux-gnu.tar.gz
          path: target/aarch64-unknown-linux-gnu/release/${{ env.CRATE_NAME }}-aarch64-unknown-linux-gnu.tar.gz
      - name: Upload armv7-unknown-linux-gnueabi.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CRATE_NAME }}-armv7-unknown-linux-gnueabi.tar.gz
          path: target/armv7-unknown-linux-gnueabi/release/${{ env.CRATE_NAME }}-armv7-unknown-linux-gnueabi.tar.gz
      - name: Upload armv7-unknown-linux-gnueabihf.tar.gz
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CRATE_NAME }}-armv7-unknown-linux-gnueabihf.tar.gz
          path: target/armv7-unknown-linux-gnueabihf/release/${{ env.CRATE_NAME }}-armv7-unknown-linux-gnueabihf.tar.gz
      - name: Publish in release
        uses: softprops/action-gh-release@v1
        if: github.ref_type == 'tag'
        with:
          files: |
            target/x86_64-unknown-linux-gnu/release/${{ env.CRATE_NAME }}-x86_64-unknown-linux-gnu.tar.gz
            target/aarch64-unknown-linux-gnu/release/${{ env.CRATE_NAME }}-aarch64-unknown-linux-gnu.tar.gz
            target/armv7-unknown-linux-gnueabi/release/${{ env.CRATE_NAME }}-armv7-unknown-linux-gnueabi.tar.gz
            target/armv7-unknown-linux-gnueabihf/release/${{ env.CRATE_NAME }}-armv7-unknown-linux-gnueabihf.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
